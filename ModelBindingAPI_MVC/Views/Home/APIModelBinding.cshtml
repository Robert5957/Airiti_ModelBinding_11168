<style>
    table {
        width: 100%;
        table-layout: fixed;
        overflow: scroll;
    }

    td {
        overflow-wrap: break-word;
        margin: 0;
        padding: 0;
    }

    html, body {
        font: 13px/18px sans-serif;
        background-color:aquamarine;
    }

    .select2-container {
        width: 100% !important;
    }

        .select2-container .select2-selection--single {
            height: 35px !important;
            color: red;
            font-size: 1.2em;
        }
</style>
<link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />

<div class=" form-inline" id="allcontent">
      @*<div class="form-group form-group-lg" style="width:10%">
        @Html.DropDownList("Method", new List<SelectListItem>() {
                    new SelectListItem(){ Value = "POST", Text = "POST"},
                    new SelectListItem(){ Value = "GET", Text = "GET" },

                })
    </div>*@
    <div class="form-group form-group-lg" style="width:35%">
        @Html.DropDownList("dataBinding", new List<SelectListItem>() {
                    new SelectListItem(){ Value = "SimpleBinding", Text = "SimpleBinding(string Name, int Age)"},
                    new SelectListItem(){ Value = "ModelBindObj", Text = "ModelBindObj(Human data)" },
                    new SelectListItem(){ Value = "SimpleModelBindArray", Text = "SimpleModelBindArray (string[] Name, int[] Age)" },
                    new SelectListItem(){ Value = "ModelBindingArray", Text = "ModelBindingArray(Human[] data)" },
                    new SelectListItem(){ Value = "ModelBindingNestedObj", Text = "ModelBindingNestedObj (Person data)" },
                    new SelectListItem(){ Value = "ModelBindingArrayNestedObj", Text = "ModelBindingArrayNestedObj(Person[] data)" }
                })
    </div>
    <div class="form-group form-group-lg" style="width:35%">
        @Html.DropDownList("contentType", new List<SelectListItem>() {
                    new SelectListItem(){ Value = "application/x-www-form-urlencoded", Text = "application/x-www-form-urlencoded"},
                    new SelectListItem(){ Value = "application/json", Text = "application/json" },
                    new SelectListItem(){ Value = "Both", Text = "Both:application/x-www-form-urlencoded&&application/json" }

                })
    </div>
    <div class="form-group form-group-lg" style="width:10%">
        <label for=""></label>
        <button id="btnSubmit" class="btn btn-primary">送出</button>
    </div>
</div>
<hr />
<table class="table table-striped" id="tableMain">
    <thead class="thead-dark">
        <tr>
            <th scope="col" width="4%">序號</th>
            <th scope="col" width="10%">繫結的資料型態</th>
            <th scope="col" width="20%">輸入內容</th>
            <th scope="col" width="10%">ContentType</th>
            <th scope="col" width="20%">送出內容</th>
            <th scope="col" width="20%">
                （URL encoding）Decoded
                or JSONBeautify
            </th>

            @*<th scope="col">URL編碼</th>*@
            <th scope="col" width="20%">傳回內容(ResponText)</th>
        </tr>
    </thead>
</table>
@section Scripts{
    <script src="https://cdnjs.cloudflare.com/ajax/libs/js-beautify/1.10.3/beautify.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
    <script>
        // using Select-2 for dropdownList
        $(document).ready(function () {
            $('#Method').prepend('<option selected=""></option>').select2({
                placeholder: "請選擇方法 ",
                allowClear: true
            });
            $('#dataBinding').prepend('<option selected=""></option>').select2({
                placeholder: "請選擇資料繫結方式",
                allowClear: true
            });
            $('#contentType').prepend('<option selected=""></option>').select2({
                placeholder: "請選擇ContentType",
                allowClear: true
            });
           });
        //btnClick event content
        $('#btnSubmit').click(() => {
            /*            $('table tbody').empty();*/
            modelBinding();
        });
        function jqdata(name, age, friends = null) {
            this.name = name
            this.age = age
            this.Friends = friends || null
        }
        function factory(action) {
            let obj =
            {
                tag: action.tag,
                url: action.url,
                dataType: action.dataType,
                id: 1,
                contentType: action.contentType,
                ajax: (data, status) => {
                    Ajax(obj, data, status);
                }
            };
            return obj;
        };
        function Ajax(obj, inputData) {
            let sendData, Alerts,
                inputType = typeof (inputData);
            switch (obj.contentType) {
                case "application/x-www-form-urlencoded":
                    obj.processData = true;//讓jQuery協助將各種格式轉成http內容的編碼
                    sendData = inputData;
                    break;
                case "application/json":
                    if (inputType == "object")
                        obj.processData = true;
                        sendData = JSON.stringify(inputData);
                    break;
            }
            $.ajax({
                url: obj.url,
                type:"POST",
                contentType: obj.contentType + "; charset=UTF-8",
                data: sendData,
                dataType: obj.dataType,
                processData: obj.processData,
                async: false,
                beforeSend: function (jqXHR, settings) {
                    let dataTxt = "";
                    switch (inputType) {
                        case "object":
                            dataTxt = js_beautify(JSON.stringify(inputData));
                            break;
                        case "string":
                            dataTxt = inputData;
                            break;
                    }
                    Alerts = ' <tbody>' +
                        '<tr>' +
                        '  <td>' + obj.id + '</td>' +
                        '  <td>' + obj.tag + '</td>' +
                        '   <td>' + dataTxt + '</td>' +
                        '   <td>' + obj.contentType + '</td>' +
                        '   <td>' + settings.data + '</td>';
                    if (obj.contentType === "application/x-www-form-urlencoded") {

                        Alerts +=
                            '<td>' + settings.data.replace(/%5B/g, "[").replace(/%5D/g, "]").replace(/&/g, "\n") + '</td>';
                    } else if (obj.contentType == "application/json") {
                        Alerts +=
                            '<td>' + js_beautify(settings.data) + '</td>';
                    }
                },

                success: function (result, textStatus, jqXHR) {
                    if (jqXHR.responseText == "" || jqXHR.responseText.includes("Null")) {
                        $('#tableMain').append(Alerts + '<td style="font-size: 20px; color: red;" ><strong>' + 'Fail !' + '</strong></td>');
                    } else if (jqXHR.responseText.includes("ObjectNotExist")) { $('#tableMain').append(Alerts + '<td style=" color: blue;" ><strong>' + jqXHR.responseText + '</strong></td>');}
                    else {
                        switch (typeof (result)) {
                            case "object":
                                result = js_beautify(JSON.stringify(result));
                                break;
                            case "string":
                                break;
                        }
                        $('#tableMain').append(Alerts+ '<td>' + result + '</td>');
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    $('#tableMain').append(Alerts + '<td style="font-size: 20px; color: green;" > status code:' + jqXHR.status+"  " + errorThrown + '</td>');
                },
                complete: function () {
                    obj.id++;
                }
            });
        }
        function modelBinding() {
            //var method = document.getElementById("Method").value;
            var actionName = document.getElementById("dataBinding").value;
            var appUrlencoded = document.getElementById('contentType').value;
            var varJsonObject =
            {
                SimpleBinding: [
                    { Name: "Gina_Object", Age: 11 }
                    , 'Name=Gina_$.param(Gina_Object)&Age=11', [{ "name": "Name", "value": "Alex_FormSerializeArray" }
                    , { "name": "Age", "value": "12" }], new jqdata("Judy", 13)
                ]

                , ModelBindObj: [
                    { Name: "Gina", Age: 21 }, new jqdata('Gina', 22)
                    , { data: { Name: "Gina", Age: 23 } }
                    , { data: new jqdata('Gina', 24) }
                ]

                , SimpleModelBindArray: [
                    { "Name": ["Siri", "Apple", "IOS"], "Age": ["12", "23", "34"] }, { "name": ["Siri", "Apple", "IOS"], "age": ["12", "23", "34"], "Friends": null }
                    , { "Name[0]": "Siri", "Age[0]": "12", "Name[1]": "Apple", "Age[1]": "23", "Name[2]": "IOS", "Age[2]": "34" }
                ]

                , ModelBindingArray: [
                    { data: [{ Name: "Gina", Age: 41 }, { Name: "Tom", Age: 1 }] }
                    , [{ Name: "Gina", Age: 42 }, { Name: "Tom", Age: 1 }]
                    , { data: [new jqdata("Gina", 43), new jqdata("Tom", 1)] }
                    , { "data[0]": { Name: "Gina", Age: 44 }, "data[1]": { Name: "Tom", Age: 2 } }
                    , { "data": { "0": { "Name": "ASP", "Age": "45" }, "1": { "Name": "Csharp", "Age": "23" }, "2": { "Name": "Java", "Age": "34" } } }
                    , { "[0]": { Name: "Gina", Age: 46 }, "[1]": { Name: "Tom", Age: 2 } }
                ]

                , ModelBindingNestedObj: [
                    { Name: "Gina", Age: 51, Friends: [{ Name: "Nana", Age: 0, Friends: [{ Name: "Ivy", Age: 3 }] }] }
                    , new jqdata('Gina', 52, [new jqdata('Tina', 20, null)])
                    , { data: { Name: "Gina", Age: 53, Friends: [{ Name: "Nana", Age: 0, Friends: [{ Name: "Ivy", Age: 3 }] }] } }
                    , { data: new jqdata('Gina', 54, [new jqdata('Tina', 20, null)]) }
                    , { "data": { "Name": "Gina", "Age": "55", "Friends": [{ "Name": "Lily", "Age": "2", "Friends": [{ "Name": "Envy", "Age": "3" }] }, { "Name": "Ivy", "Age": "4" }] } }
                    , { "name": "Gina", "age": "56", "Friends": [{ "name": "Lily", "age": "2", "Friends": [{ "name": "Envy", "age": "3", "Friends": null }] }, { "name": "Ivy", "age": "4", "Friends": null }] }
                ]

                , ModelBindingArrayNestedObj: [
                    [{ Name: "Gina", Age: 61, Friends: [{ Name: "Nana", Age: 0, Friends: [{ Name: "Ivy", Age: 3 }] }] }, { Name: "Fanny", Age: 5, Friends: [{ Name: "Tina", Age: 0, Friends: [{ Name: "Chris", Age: 3 }] }] }]
                    ,{ data: [{ Name: "Gina61_data", Age: 61, Friends: [{ Name: "Nana", Age: 0, Friends: [{ Name: "Ivy", Age: 3 }] }] }, { Name: "Fanny", Age: 5, Friends: [{ Name: "Tina", Age: 0, Friends: [{ Name: "Chris", Age: 3 }] }] }] }
                    , [new jqdata('Gina', 62, [new jqdata('Ivy', 2)]), new jqdata('Fanny', 23, [new jqdata('Eva', 2)])]
                    , { data: [new jqdata('Gina62_data', 62, [new jqdata('Ivy', 2)]), new jqdata('Fanny', 23, [new jqdata('Eva', 2)])] }
                    , [{ "Name": "Gina", "Age": "63", "Friends": [{ "Name": "Coco", "Age": "2", "Friends": [{ "Name": "David", "Age": "3" }] }, { "Name": "Eve", "Age": "4" }] }, { "Name": "Bob", "Age": "5", "Friends": [{ "Name": "Frank", "Age": "6", "Friends": [{ "Name": "Gino", "Age": "7" }] }, { "Name": "Hank", "Age": "8" }] }]
                    , { data: [{ "Name": "Gina63_data", "Age": "63", "Friends": [{ "Name": "Coco", "Age": "2", "Friends": [{ "Name": "David", "Age": "3" }] }, { "Name": "Eve", "Age": "4" }] }, { "Name": "Bob", "Age": "5", "Friends": [{ "Name": "Frank", "Age": "6", "Friends": [{ "Name": "Gino", "Age": "7" }] }, { "Name": "Hank", "Age": "8" }] }] }
                    , [new jqdata('Gina', 64, [new jqdata('Coco', 2, [new jqdata('David', 3)]), new jqdata('eve', 4)]), new jqdata('Ann', 1, [new jqdata('Coco', 2, [new jqdata('David', 3)]), new jqdata('eve', 4)])]
                    , { data: [new jqdata('Gina64_data', 64, [new jqdata('Coco', 2, [new jqdata('David', 3)]), new jqdata('eve', 4)]), new jqdata('Ann', 1, [new jqdata('Coco', 2, [new jqdata('David', 3)]), new jqdata('eve', 4)])] }
                    , { "data[0]": { Name: "Gina", Age: 64, Friends: [{ Name: "Nana", Age: 0, Friends: [{ Name: "Ivy", Age: 3 }] }] }, "data[1]": { Name: "Fanny", Age: 5, Friends: [{ Name: "Tina", Age: 0, Friends: [{ Name: "Chris", Age: 3 }] }] } }
                    , { "[0]": { Name: "Gina", Age: 65, Friends: [{ Name: "Nana", Age: 0, Friends: [{ Name: "Ivy", Age: 3 }] }] }, "[1]": { Name: "Fanny", Age: 5, Friends: [{ Name: "Tina", Age: 0, Friends: [{ Name: "Chris", Age: 3 }] }] } }
                    , { "[0]": { "Name": "Ann", "Age": "1", "Friends[0]": { "Name": "Coco", "Age": "2", "Friends[0]": { "Name": "David", "Age": "3" } }, "Friends[1]": { "Name": "Eve", "Age": "4" } }, "[1]": { "Name": "Bob", "Age": "5", "Friends[0]": { "Name": "Frank", "Age": "6", "Friends[0]": { "Name": "Gino", "Age": "7" } }, "Friends[1]": { "Name": "Hank", "Age": "8" } } }
                    , [{ "name": "data[0].Name", "value": "Ann_serializeArrayForm" }, { "name": "data[0].Age", "value": "1" }, { "name": "data[0].Friends[0].Name", "value": "Coco" }, { "name": "data[0].Friends[0].Age", "value": "2" }, { "name": "data[0].Friends[0].Friends[0].Name", "value": "David" }, { "name": "data[0].Friends[0].Friends[0].Age", "value": "3" }, { "name": "data[0].Friends[1].Name", "value": "Eve" }, { "name": "data[0].Friends[1].Age", "value": "4" }, { "name": "data[1].Name", "value": "Bob" }, { "name": "data[1].Age", "value": "5" }, { "name": "data[1].Friends[0].Name", "value": "Frank" }, { "name": "data[1].Friends[0].Age", "value": "6" }, { "name": "data[1].Friends[0].Friends[0].Name", "value": "Gino" }, { "name": "data[1].Friends[0].Friends[0].Age", "value": "7" }, { "name": "data[1].Friends[1].Name", "value": "Hank" }, { "name": "data[1].Friends[1].Age", "value": "8" }]

                ]
            }
            var variables =
            {
                SimpleBinding: [
                    { Name: "Gina_Object", Age: 11 }
                    , 'Name=Gina_$.param(Gina_Object)&Age=11', [{ "name": "Name", "value": "Alex_FormSerializeArray" }
                        , { "name": "Age", "value": "12" }]
                    , new jqdata("Judy", 13), 'Name=Judy_$.param(Judy_Object)&Age=13&Friends=']

                , ModelBindObj: [
                    'Name=Gina&Age=21', 'namex=Gina_changeName(prop)To_name&age=21'
                    , 'Name=Gina&Age=22&Friends=', 'Name= Gina_formSerialize&Age=23'
                    , [{ "name": "Name", "value": "Gina_formSerializeArray" }, { "name": "Age", "value": "23" }]
                    , { Name: "Gina", Age: 24 }
                    , new jqdata('Gina', 25)
                    , { data: { Name: "Gina", Age: 26 } }
                    , 'data%5BName%5D=Gina_$.param(Gina_Object)&data%5BAge%5D=26'
                    , { data: new jqdata('Gina', 27) }
                    , 'data%5Bname%5D=Gina_$.param(Gina_Object)&data%5Bage%5D=27&data%5BFriends%5D=']

                , SimpleModelBindArray: [
                    { "Name": ["Siri", "Apple", "IOS"], "Age": ["12", "23", "34"] }
                    , 'Name=Siri_$.param(Siri_Object,true)&Name=Apple&Name=IOS&Age=12&Age=23&Age=34', 'Name%5B%5D=Siri_$.param(Siri_Object,false)&Name%5B%5D=Apple&Name%5B%5D=IOS&Age%5B%5D=12&Age%5B%5D=23&Age%5B%5D=34'
                    , { "name": ["Siri", "Apple", "IOS"], "age": ["12", "23", "34"], "Friends": null }
                    , 'name=Siri_$.param(Siri_Object,true)&name=Apple&name=IOS&age=12&age=23&age=34&Friends=', 'name%5B%5D=Siri_$.param(Siri_Object,false)&name%5B%5D=Apple&name%5B%5D=IOS&age%5B%5D=12&age%5B%5D=23&age%5B%5D=34&Friends=', { "Name[0]": "Siri", "Age[0]": "12", "Name[1]": "Apple", "Age[1]": "23", "Name[2]": "IOS", "Age[2]": "34" }, 'Name%5B0%5D=Siri_$.param(Siri_Object,false==true)&Age%5B0%5D=12&Name%5B1%5D=Apple&Age%5B1%5D=23&Name%5B2%5D=IOS&Age%5B2%5D=34'
                    , [{ "name": "Name[0]", "value": "Siri" }, { "name": "Age[0]", "value": "12" }, { "name": "Name[1]", "value": "Apple" }, { "name": "Age[1]", "value": "23" }, { "name": "Name[2]", "value": "IOS" }, { "name": "Age[2]", "value": "34" }]
                ]

                , ModelBindingArray: [
                    {"data": [{ "Name": "ASP", "Age": "12" }, { "Name": "Csharp", "Age": "23" }, { "Name": "Java", "Age": "34" }]}
                    , 'data%5B0%5D%5BName%5D=ASP_$.param(ASP)&data%5B0%5D%5BAge%5D=12&data%5B1%5D%5BName%5D=Csharp&data%5B1%5D%5BAge%5D=23&data%5B2%5D%5BName%5D=Java&data%5B2%5D%5BAge%5D=34'
                    , [{ Name: "Gina", Age: 42 }, { Name: "Tom", Age: 1 }]
                    , { "data": [{ "name": "ASP", "age": "12", "Friends": null }, { "name": "Csharp", "age": "23", "Friends": null }, { "name": "Java", "age": "34", "Friends": null }] }
                    , 'data%5B0%5D%5Bname%5D=ASP_$.param(ASP)&data%5B0%5D%5Bage%5D=12&data%5B0%5D%5BFriends%5D=&data%5B1%5D%5Bname%5D=Csharp&data%5B1%5D%5Bage%5D=23&data%5B1%5D%5BFriends%5D=&data%5B2%5D%5Bname%5D=Java&data%5B2%5D%5Bage%5D=34&data%5B2%5D%5BFriends%5D='
                    , { "data[0]": { Name: "Gina", Age: 44 }, "data[1]": { Name: "Tom", Age: 2 } }
                    , { "data": { "0": { "Name": "ASP", "Age": "12" }, "1": { "Name": "Csharp", "Age": "23" }, "2": { "Name": "Java", "Age": "34" } } }
                    , 'data%5B0%5D%5BName%5D=ASP_$.param(ASP)&data%5B0%5D%5BAge%5D=12&data%5B1%5D%5BName%5D=Csharp&data%5B1%5D%5BAge%5D=23&data%5B2%5D%5BName%5D=Java&data%5B2%5D%5BAge%5D=34'
                    , { "[0]": { "Name": "ASP", "Age": "12" }, "[1]": { "Name": "Csharp", "Age": "23" }, "[2]": { "Name": "Java", "Age": "34" } }
                    , '%5B0%5D%5BName%5D=ASP_$.param(ASP)&%5B0%5D%5BAge%5D=12&%5B1%5D%5BName%5D=Csharp&%5B1%5D%5BAge%5D=23&%5B2%5D%5BName%5D=Java&%5B2%5D%5BAge%5D=34'
                    , [{ "name": "data[0].Name", "value": "ASP" }, { "name": "data[0].Age", "value": "12" }, { "name": "data[1].Name", "value": "Csharp" }, { "name": "data[1].Age", "value": "23" }, { "name": "data[2].Name", "value": "Java" }, { "name": "data[2].Age", "value": "34" }]
                ]

                , ModelBindingNestedObj: [
                    { Name: "Gina", Age: 51, Friends: [{ Name: "Nana", Age: 0, Friends: [{ Name: "Ivy", Age: 3 }] }] }
                    , 'Name=Gina_$.param(Gina51)&Age=51&Friends%5B0%5D%5BName%5D=Lily&Friends%5B0%5D%5BAge%5D=2&Friends%5B0%5D%5BFriends%5D%5B0%5D%5BName%5D=Envy&Friends%5B0%5D%5BFriends%5D%5B0%5D%5BAge%5D=3&Friends%5B1%5D%5BName%5D=Ivy&Friends%5B1%5D%5BAge%5D=4'
                    , new jqdata('Gina', 52, [new jqdata('Tina', 20, null)])
                    , { "Name": "Vivy", "Age": "53", "Friends": [{ "Name": "Lily", "Age": "2", "Friends": [{ "Name": "Envy", "Age": "3" }] }, { "Name": "Ivy", "Age": "4" }] }, { "data": { "name": "Vivy", "age": "54", "Friends": [{ "name": "Lily", "age": "2", "Friends": [{ "name": "Envy", "age": "3", "Friends": null }] }, { "name": "Ivy", "age": "4", "Friends": null }] } }
                    , 'data%5Bname%5D=Gina_$.param(Gina54)&data%5Bage%5D=1&data%5BFriends%5D%5B0%5D%5Bname%5D=Lily&data%5BFriends%5D%5B0%5D%5Bage%5D=2&data%5BFriends%5D%5B0%5D%5BFriends%5D%5B0%5D%5Bname%5D=Envy&data%5BFriends%5D%5B0%5D%5BFriends%5D%5B0%5D%5Bage%5D=3&data%5BFriends%5D%5B0%5D%5BFriends%5D%5B0%5D%5BFriends%5D=&data%5BFriends%5D%5B1%5D%5Bname%5D=Ivy&data%5BFriends%5D%5B1%5D%5Bage%5D=4&data%5BFriends%5D%5B1%5D%5BFriends%5D=', { "name": "Gina", "age": "55", "Friends": [{ "name": "Lily", "age": "2", "Friends": [{ "name": "Envy", "age": "3", "Friends": null }] }, { "name": "Ivy", "age": "4", "Friends": null }] }, 'name=Gina_$.param(Gina55)&age=1&Friends%5B0%5D%5Bname%5D=Lily&Friends%5B0%5D%5Bage%5D=2&Friends%5B0%5D%5BFriends%5D%5B0%5D%5Bname%5D=Envy&Friends%5B0%5D%5BFriends%5D%5B0%5D%5Bage%5D=3&Friends%5B0%5D%5BFriends%5D%5B0%5D%5BFriends%5D=&Friends%5B1%5D%5Bname%5D=Ivy&Friends%5B1%5D%5Bage%5D=4&Friends%5B1%5D%5BFriends%5D='
                    , { data: { Name: "Gina", Age: 56, Friends: [{ Name: "Nana", Age: 0, Friends: [{ Name: "Ivy", Age: 3 }] }] } }
                    , { data: new jqdata('Gina', 57, [new jqdata('Tina', 20, null)]) }
                    , { "data": { "Name": "Gina", "Age": "58", "Friends": [{ "Name": "Lily", "Age": "2", "Friends": [{ "Name": "Envy", "Age": "3" }] }, { "Name": "Ivy", "Age": "4" }] } }
                    , 'data%5BName%5D=Vivy_$.param(Gina58)&data%5BAge%5D=1&data%5BFriends%5D%5B0%5D%5BName%5D=Lily&data%5BFriends%5D%5B0%5D%5BAge%5D=2&data%5BFriends%5D%5B0%5D%5BFriends%5D%5B0%5D%5BName%5D=Envy&data%5BFriends%5D%5B0%5D%5BFriends%5D%5B0%5D%5BAge%5D=3&data%5BFriends%5D%5B1%5D%5BName%5D=Ivy&data%5BFriends%5D%5B1%5D%5BAge%5D=4'
                    , [{ "name": "Name", "value": "Vivy" }, { "name": "Age", "value": "59" }, { "name": "Friends[0].Name", "value": "Lily" }, { "name": "Friends[0].Age", "value": "2" }, { "name": "Friends[0].Friends[0].Name", "value": "Envy" }, { "name": "Friends[0].Friends[0].Age", "value": "3" }, { "name": "Friends[1].Name", "value": "Ivy" }, { "name": "Friends[1].Age", "value": "4" }]
                ]

                , ModelBindingArrayNestedObj: [
                    [{ Name: "Gina", Age: 61, Friends: [{ Name: "Nana", Age: 0, Friends: [{ Name: "Ivy", Age: 3 }] }] }, { Name: "Fanny", Age: 5, Friends: [{ Name: "Tina", Age: 0, Friends: [{ Name: "Chris", Age: 3 }] }] }]
                    , { data: [{ Name: "Gina61_data", Age: 61, Friends: [{ Name: "Nana", Age: 0, Friends: [{ Name: "Ivy", Age: 3 }] }] }, { Name: "Fanny", Age: 5, Friends: [{ Name: "Tina", Age: 0, Friends: [{ Name: "Chris", Age: 3 }] }] }] }
                    , [new jqdata('Gina', 62, [new jqdata('Ivy', 2)]), new jqdata('Fanny', 23, [new jqdata('Eva', 2)])]
                    , { data: [new jqdata('Gina62_data', 62, [new jqdata('Ivy', 2)]), new jqdata('Fanny', 23, [new jqdata('Eva', 2)])] }
                    , [{ "Name": "Gina", "Age": "63", "Friends": [{ "Name": "Coco", "Age": "2", "Friends": [{ "Name": "David", "Age": "3" }] }, { "Name": "Eve", "Age": "4" }] }, { "Name": "Bob", "Age": "5", "Friends": [{ "Name": "Frank", "Age": "6", "Friends": [{ "Name": "Gino", "Age": "7" }] }, { "Name": "Hank", "Age": "8" }] }]
                    , { data: [{ "Name": "Gina63_data", "Age": "63", "Friends": [{ "Name": "Coco", "Age": "2", "Friends": [{ "Name": "David", "Age": "3" }] }, { "Name": "Eve", "Age": "4" }] }, { "Name": "Bob", "Age": "5", "Friends": [{ "Name": "Frank", "Age": "6", "Friends": [{ "Name": "Gino", "Age": "7" }] }, { "Name": "Hank", "Age": "8" }] }] }
                    , 'data%5B0%5D%5BName%5D=Gina_$.param(Gina63)&data%5B0%5D%5BAge%5D=1&data%5B0%5D%5BFriends%5D%5B0%5D%5BName%5D=Coco&data%5B0%5D%5BFriends%5D%5B0%5D%5BAge%5D=2&data%5B0%5D%5BFriends%5D%5B0%5D%5BFriends%5D%5B0%5D%5BName%5D=David&data%5B0%5D%5BFriends%5D%5B0%5D%5BFriends%5D%5B0%5D%5BAge%5D=3&data%5B0%5D%5BFriends%5D%5B1%5D%5BName%5D=Eve&data%5B0%5D%5BFriends%5D%5B1%5D%5BAge%5D=4&data%5B1%5D%5BName%5D=Bob&data%5B1%5D%5BAge%5D=5&data%5B1%5D%5BFriends%5D%5B0%5D%5BName%5D=Frank&data%5B1%5D%5BFriends%5D%5B0%5D%5BAge%5D=6&data%5B1%5D%5BFriends%5D%5B0%5D%5BFriends%5D%5B0%5D%5BName%5D=Gino&data%5B1%5D%5BFriends%5D%5B0%5D%5BFriends%5D%5B0%5D%5BAge%5D=7&data%5B1%5D%5BFriends%5D%5B1%5D%5BName%5D=Hank&data%5B1%5D%5BFriends%5D%5B1%5D%5BAge%5D=8'
                    , [new jqdata('Gina', 64, [new jqdata('Coco', 2, [new jqdata('David', 3)]), new jqdata('eve', 4)]), new jqdata('Ann', 1, [new jqdata('Coco', 2, [new jqdata('David', 3)]), new jqdata('eve', 4)])]
                    , { data: [new jqdata('Gina64_data', 64, [new jqdata('Coco', 2, [new jqdata('David', 3)]), new jqdata('eve', 4)]), new jqdata('Ann', 1, [new jqdata('Coco', 2, [new jqdata('David', 3)]), new jqdata('eve', 4)])] }
                    , { "data[0]": { Name: "Gina", Age: 64, Friends: [{ Name: "Nana", Age: 0, Friends: [{ Name: "Ivy", Age: 3 }] }] }, "data[1]": { Name: "Fanny", Age: 5, Friends: [{ Name: "Tina", Age: 0, Friends: [{ Name: "Chris", Age: 3 }] }] } }
                    , { "[0]": { Name: "Gina", Age: 65, Friends: [{ Name: "Nana", Age: 0, Friends: [{ Name: "Ivy", Age: 3 }] }] }, "[1]": { Name: "Fanny", Age: 5, Friends: [{ Name: "Tina", Age: 0, Friends: [{ Name: "Chris", Age: 3 }] }] } }
                    , { "[0]": { "Name": "Gina", "Age": "66", "Friends[0]": { "Name": "Coco", "Age": "2", "Friends[0]": { "Name": "David", "Age": "3" } }, "Friends[1]": { "Name": "Eve", "Age": "4" } }, "[1]": { "Name": "Bob", "Age": "5", "Friends[0]": { "Name": "Frank", "Age": "6", "Friends[0]": { "Name": "Gino", "Age": "7" } }, "Friends[1]": { "Name": "Hank", "Age": "8" } } }
                    ,'data%5B0%5D%5Bname%5D=Gina_$.param(Gina66)&data%5B0%5D%5Bage%5D=1&data%5B0%5D%5BFriends%5D%5B0%5D%5Bname%5D=Coco&data%5B0%5D%5BFriends%5D%5B0%5D%5Bage%5D=2&data%5B0%5D%5BFriends%5D%5B0%5D%5BFriends%5D%5B0%5D%5Bname%5D=David&data%5B0%5D%5BFriends%5D%5B0%5D%5BFriends%5D%5B0%5D%5Bage%5D=3&data%5B0%5D%5BFriends%5D%5B0%5D%5BFriends%5D%5B0%5D%5BFriends%5D=&data%5B0%5D%5BFriends%5D%5B1%5D%5Bname%5D=Eve&data%5B0%5D%5BFriends%5D%5B1%5D%5Bage%5D=4&data%5B0%5D%5BFriends%5D%5B1%5D%5BFriends%5D=&data%5B1%5D%5Bname%5D=Bob&data%5B1%5D%5Bage%5D=5&data%5B1%5D%5BFriends%5D%5B0%5D%5Bname%5D=Frank&data%5B1%5D%5BFriends%5D%5B0%5D%5Bage%5D=6&data%5B1%5D%5BFriends%5D%5B0%5D%5BFriends%5D%5B0%5D%5Bname%5D=Gino&data%5B1%5D%5BFriends%5D%5B0%5D%5BFriends%5D%5B0%5D%5Bage%5D=7&data%5B1%5D%5BFriends%5D%5B0%5D%5BFriends%5D%5B0%5D%5BFriends%5D=&data%5B1%5D%5BFriends%5D%5B1%5D%5Bname%5D=Hank&data%5B1%5D%5BFriends%5D%5B1%5D%5Bage%5D=8&data%5B1%5D%5BFriends%5D%5B1%5D%5BFriends%5D='
                    , [{ "name": "data[0].Name", "value": "Gina66_serializeArrayForm" }, { "name": "data[0].Age", "value": "1" }, { "name": "data[0].Friends[0].Name", "value": "Coco" }, { "name": "data[0].Friends[0].Age", "value": "2" }, { "name": "data[0].Friends[0].Friends[0].Name", "value": "David" }, { "name": "data[0].Friends[0].Friends[0].Age", "value": "3" }, { "name": "data[0].Friends[1].Name", "value": "Eve" }, { "name": "data[0].Friends[1].Age", "value": "4" }, { "name": "data[1].Name", "value": "Bob" }, { "name": "data[1].Age", "value": "5" }, { "name": "data[1].Friends[0].Name", "value": "Frank" }, { "name": "data[1].Friends[0].Age", "value": "6" }, { "name": "data[1].Friends[0].Friends[0].Name", "value": "Gino" }, { "name": "data[1].Friends[0].Friends[0].Age", "value": "7" }, { "name": "data[1].Friends[1].Name", "value": "Hank" }, { "name": "data[1].Friends[1].Age", "value": "8" }]
]
            }
            let actionStyle;
            switch (actionName) {
                case "SimpleBinding":
                    actionStyle = "string Name, int Age";
                    break;
                case "ModelBindObj":
                    actionStyle = "Human data";
                    break;
                case "SimpleModelBindArray":
                    actionStyle = "string[] Name, int[] Age";
                    break;
                case "ModelBindingArray":
                    actionStyle = "Human[] data";
                    break;
                case "ModelBindingNestedObj":
                    actionStyle = "Person data";
                    break;
                case "ModelBindingArrayNestedObj":
                    actionStyle = "Person[] data";
                    break;
            }
            let action_modelBinding = { tag: actionStyle, url: "/api/"+actionName,dataType: "text", contentType: appUrlencoded };
            switch (appUrlencoded) {
                case "application/x-www-form-urlencoded":
                    contentTypeSel(variables, actionName, action_modelBinding);
                    break;
                case "application/json":
                    contentTypeSel(varJsonObject, actionName, action_modelBinding);
                    break;
                case "Both":
                    action_modelBinding = { tag: actionStyle, url: "/api/" + actionName,  dataType: "text", contentType: "application/x-www-form-urlencoded" };
                    contentTypeSel(variables, actionName, action_modelBinding);
                    action_modelBinding = { tag: actionStyle, url: "/api/" + actionName, dataType: "text", contentType: "application/json" };
                    contentTypeSel(varJsonObject, actionName, action_modelBinding);
                    break;
            }
        }
        function contentTypeSel(variables, actionName, action_modelBinding ) {
            for (var actionname in variables) {
                if (variables.hasOwnProperty(actionname)) {
                    if (actionname == actionName) {
                        let modelBinding = factory(action_modelBinding);
                        variables[actionname].forEach((object) => {
                            modelBinding.ajax(object);
                        })
                    }
                }
            } $('#tableMain').append('<td >End</td>');
};
    </script>
}
