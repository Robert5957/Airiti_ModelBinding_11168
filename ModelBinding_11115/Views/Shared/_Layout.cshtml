<!DOCTYPE html>
<html>
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>@ViewBag.Title - 我的 ASP.NET 應用程式</title>
  @Styles.Render("~/Content/css")
  @Scripts.Render("~/bundles/modernizr")

  <link href="~/Content/StyleSheet1.css" rel="stylesheet" />

</head>
<body>
  <div class="navbar navbar-inverse navbar-fixed-top">
    <div class="container">
      <div class="navbar-header">
        <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
        </button>
        @Html.ActionLink("輸入用", "Index", "Default", new { area = "" }, new { @class = "navbar-brand" })
      </div>
      <div class="navbar-collapse collapse">
        <ul class="nav navbar-nav">
          <li>@Html.ActionLink("SimpleBinding", "SimpleBinding", "Default")</li>
          <li>@Html.ActionLink("ModelBindObj", "ModelBindObj", "Default")</li>
          <li>@Html.ActionLink("SimpleModelBindArray", "SimpleModelBindArray", "Default")</li>
          <li>@Html.ActionLink("ModelBindingArray", "ModelBindingArray", "Default")</li>
          <li>@Html.ActionLink("ModelBindingNestedObj", "ModelBindingNestedObj", "Default")</li>
          <li>@Html.ActionLink("ModelBindingArrayNestedObj", "ModelBindingArrayNestedObj", "Default")</li>
        </ul>
      </div>
    </div>
  </div>
  <div class="container body-content">
    @RenderBody()
    <hr />
    <footer>
      <p>&copy; @DateTime.Now.Year - 我的 ASP.NET 應用程式</p>
    </footer>
  </div>

  @Scripts.Render("~/bundles/jquery")
  @Scripts.Render("~/bundles/bootstrap")
  <script src="https://code.jquery.com/jquery-3.4.1.js"
          integrity="sha256-WpOohJOqMqqyKL9FccASB9O0KwACQJpFTUBLTYOVvVU=" crossorigin="anonymous"></script>
  <script>
    const appUrlencoded = "application/x-www-form-urlencoded";
    const appJson = "application/json";
    function Ajax(obj, inputData) {
      let sendData,
        Alerts,
        inputType = typeof (inputData);

      switch (obj.contentType) {
        case "application/x-www-form-urlencoded":
          obj.processData = true;//讓jQuery協助將各種格式轉成http內容的編碼
          sendData = inputData;
          break;
        case "application/json":
          obj.processData = true;
          if (inputType === "object")
            sendData = JSON.stringify(inputData);
          break;
      }

      $.ajax({
        url: obj.url,
        method: obj.method ? obj.method : 'POST',
        contentType: obj.contentType + "; charset=UTF-8",
        data: sendData,
        dataType: obj.dataType,
        processData: obj.processData,
        async: false,
        beforeSend: function (jqXHR, settings) {
          let dataTxt = "";
          switch (inputType) {
            case "object":
              dataTxt = js_beautify(JSON.stringify(inputData));
              break;
            case "string":
              dataTxt = inputData;
              break;
          }
          Alerts =
            '<div class="text-left alert alert-' + "※status※" + '" role="alert">' +
            '<code style="font-size: x-large">' + obj.tag + '</code><strong><em>......' + obj.id + '</em></strong>' +
            '<p>輸入（<strong>' + inputType + '</strong>）</p>' +
            '<pre>' + dataTxt + '</pre>' +
            '<p>送出內容：根據【<strong>' + obj.contentType + '</strong>】編碼</p>' +
            '<pre>' + settings.data + '</pre>';
          if (obj.contentType === "application/x-www-form-urlencoded") {

            Alerts +=
              '<p>將URL編碼（URL encoding）Decoded，並將「&」轉為換行</p>' +
              '<pre>' + settings.data.replace(/%5B/g, "[").replace(/%5D/g, "]").replace(/&/g, "\n") + '</pre>';
          } else if (obj.contentType === "application/json") {
            Alerts +=
              '<p>JSON Beautify</p>' +
              '<pre>' + js_beautify(settings.data) + '</pre>';
          }
          //不知何時開始，ASP.NET資料結構 data[0][Name] 也可以讀到屬性Name，不需要再轉為 data[0].Name
          //settings.data = settings.data.replace(/%5D%5B(.+?)%5D=/g, "%5D.$1=");
        },
        success: function (result, textStatus, jqXHR) {
          switch (typeof (result)) {
            case "object":
              result = js_beautify(JSON.stringify(result));
              break;
            case "string":
              break;
          }
          $('#result').append(Alerts.replace("※status※", 'success') + '<p>返回（' + obj.dataType + '）</p>' + '<pre><code>' + result + '</code></pre>' + '</div>');
        },
        error: function (jqXHR, textStatus, errorThrown) {
          $('#result').append(Alerts.replace("※status※", 'danger'));
          console.log("error!");
        },
        complete: function () {
          $('#result').append('<hr>');
          obj.id++;
        }
      });
    }                        
    function factory(action) {
      let obj =
      {
        tag: action.tag,
        url: action.url,
        dataType: action.dataType,
        id: 1,
        contentType: action.contentType,
        ajax: (data, status) => {
          Ajax(obj, data, status);
        }
      };
      return obj;
    }
    function jqdata(name, age, friends = null) {
      this.name = name
      this.age = age
      this.Friends = friends || null
    }
  </script>
  @RenderSection("scripts", required: false)
</body>
</html>
